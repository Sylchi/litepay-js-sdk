{"mappings":";;;;;;;;;;AAAA,MAAM,gCAAU;AAED;IAIb,YAAY,UAAE,MAAM,SAAE,KAAK,EAAwC,CAAE;aAHrE,SAAS;aACT,QAAQ;QAGN,IAAG,QAAQ,IAAI,CAAC,SAAS;QACzB,IAAG,OAAO,IAAI,CAAC,QAAQ;IACzB;IAEA,MAAM,MAAM,SAAE,KAAK,aAAE,SAAS,EAAyD,EAAE;QACvF,MAAM,SAAS,MAAM,MAAM,+BAAS;YAClC,QAAQ;YACR,SAAS;gBACP,gBAAgB;gBAChB,aAAa,IAAI,CAAC;YACpB;YACA,MAAM,KAAK,UAAU;uBAAE;2BAAO;YAAU;QAC1C,GAAG,KAAK,CAAA,MAAO,IAAI;QACnB,OAAO;IACT;IAEA,MAAM,YAAY;QAChB,IAAI;YACF,MAAM,SAAS,MAAM,IAAI,CAAC,MAAM;gBAC9B,OAAO,CAAC;;;;;;;;;;;;;;QAcR,CAAC;YACH;YACA,OAAO,OAAO,KAAK;QACrB,EAAE,OAAO,KAAK;YACZ,IAAG,IAAI,CAAC,OAAO,QAAQ,MAAM;YAC7B,MAAM,IAAI,MAAM;QAClB;IACF;AAEF","sources":["src/index.ts"],"sourcesContent":["const API_URL = 'https://api.litepay.gg/api/graphql';\n\nexport default class LitepayClient {\n  apiKey = \"\";\n  debug = false;\n\n  constructor({ apiKey, debug }: { apiKey?: string, debug?: boolean }) {\n    if(apiKey) this.apiKey = apiKey;\n    if(debug) this.debug = true;\n  }\n\n  async query({ query, variables }: { query: string, variables?: Record<string, unknown>}) {\n    const result = await fetch(API_URL, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        'x-api-key': this.apiKey\n      }, \n      body: JSON.stringify({ query, variables })\n    }).then(res => res.json());\n    return result;\n  }\n  \n  async getTokens() {\n    try {\n      const result = await this.query({\n        query: `\n          query Tokens {\n            tokens {\n              code\n              coin\n              network\n              priority\n              name\n              recv\n              send\n              tag\n              color\n            }\n          }\n        `\n      });\n      return result.data.tokens;\n    } catch (err) {\n      if(this.debug) console.error(err);\n      throw new Error(\"Litepay: Couldn't fetch tokens\");\n    }\n  }\n\n}"],"names":[],"version":3,"file":"main.js.map"}