{"mappings":"AAEA;IACE,MAAM,SAAM;IACZ,KAAK,UAAS;gBAEF,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE;QAAE,MAAM,CAAC,EAAE,MAAM,CAAC;QAAC,KAAK,CAAC,EAAE,OAAO,CAAA;KAAE;IAK7D,KAAK,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,EAAE;QAAE,KAAK,EAAE,MAAM,CAAC;QAAC,SAAS,CAAC,EAAE,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,CAAA;KAAC;IAYjF,SAAS;CA0BhB","sources":["src/src/index.ts","src/index.ts"],"sourcesContent":[null,"const API_URL = 'https://api.litepay.gg/api/graphql';\n\nexport default class LitepayClient {\n  apiKey = \"\";\n  debug = false;\n\n  constructor({ apiKey, debug }: { apiKey?: string, debug?: boolean }) {\n    if(apiKey) this.apiKey = apiKey;\n    if(debug) this.debug = true;\n  }\n\n  async query({ query, variables }: { query: string, variables?: Record<string, unknown>}) {\n    const result = await fetch(API_URL, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        'x-api-key': this.apiKey\n      }, \n      body: JSON.stringify({ query, variables })\n    }).then(res => res.json());\n    return result;\n  }\n  \n  async getTokens() {\n    try {\n      const result = await this.query({\n        query: `\n          query Tokens {\n            tokens {\n              code\n              coin\n              network\n              priority\n              name\n              recv\n              send\n              tag\n              color\n            }\n          }\n        `\n      });\n      return result.data.tokens;\n    } catch (err) {\n      if(this.debug) console.error(err);\n      throw new Error(\"Litepay: Couldn't fetch tokens\");\n    }\n  }\n\n}"],"names":[],"version":3,"file":"types.d.ts.map"}